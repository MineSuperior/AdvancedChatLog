import javax.net.ssl.HttpsURLConnection
import java.nio.file.Files

plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
	id "io.freefair.lombok" version "8.10"
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

Properties additionalProperties = new Properties()
if (file("extra.properties").exists()) {
	additionalProperties.load(file("extra.properties").newReader())
}

repositories {
	mavenCentral()
	mavenLocal() // only used to build the mod locally
	maven { url 'https://masa.dy.fi/maven' }
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'org.projectlombok:lombok:1.18.28'
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.github.sakura-ryoko:malilib:${project.malilib_version}"
	//modImplementation "com.github.DarkKronicle:AdvancedChatCore:${project.advancedchat_version}"
	modImplementation "io.github.darkkronicle:AdvancedChatCore:${project.advancedchat_version}" // only used to build the mod locally
	// modImplementation files("libs/AdvancedChatCore-${project.advancedchat_version}.jar") // only used to build the mod locally
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
tasks.register('sourcesJar', Jar) {
	dependsOn classes
	archiveClassifier.set('sources')
	from sourceSets.main.allSource
}

jar {
	from "LICENSE.txt"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		mavenLocal()
	}
}
